<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>派大星</title>
  
  <subtitle>派大星</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-05-07T14:38:52.040Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>派大星</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</title>
    <link href="http://example.com/2022/05/07/%E8%B5%B5%E4%B8%BD%E9%A2%96%EF%BC%9A%E6%B2%A1%E6%9C%89%E4%BB%80%E4%B9%88%E9%85%8D%E4%B8%8D%E9%85%8D%EF%BC%8C%E4%BD%A0%E7%9A%84%E5%8A%AA%E5%8A%9B%E5%8F%91%E5%85%89%E4%BA%86%EF%BC%8C%E4%BD%A0%E5%B0%B1%E6%98%AF%E5%80%BC%E5%BE%97%E7%9A%84%EF%BC%81/"/>
    <id>http://example.com/2022/05/07/%E8%B5%B5%E4%B8%BD%E9%A2%96%EF%BC%9A%E6%B2%A1%E6%9C%89%E4%BB%80%E4%B9%88%E9%85%8D%E4%B8%8D%E9%85%8D%EF%BC%8C%E4%BD%A0%E7%9A%84%E5%8A%AA%E5%8A%9B%E5%8F%91%E5%85%89%E4%BA%86%EF%BC%8C%E4%BD%A0%E5%B0%B1%E6%98%AF%E5%80%BC%E5%BE%97%E7%9A%84%EF%BC%81/</id>
    <published>2022-05-07T14:18:01.659Z</published>
    <updated>2022-05-07T14:38:52.040Z</updated>
    
    <content type="html"><![CDATA[<p>网络上为赵丽颖晋身为Dior新代言人，为baby抱屈而打口水仗的人们依旧在评论区喋喋不休。</p><p>网友不是头一次抹黑赵丽颖，也不是第一次对她评头论足。</p><p>他们从来没忘记赵丽颖的中专文凭、农村出身、补刀神手的人设，以及她在时尚界那次长裙美背后却贴小花纸的“土美”事件。</p><p>他们从来没想到她以一张包子脸的长相也能进军时尚界甚至可以开疆辟土，能在颜控大长腿的天下里挤得一席之地。</p><span id="more"></span><p><img src="https://joeybling.github.io/images/2743275-53f4e13ae7bb957c.jpg" alt="img"><br>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p><p>别说喷子们不服，就连那些以颜值、身材傲娇的模特们甚至也要掂量下要不要去拍部剧来充实一下自己的市场含金量。</p><p>也许，不过是因为赵丽颖改变了某些市场主导者的审美标准，也或者因为她让人们看到了属于某种叫做内在因素的美学吸引力。</p><p>在风云突变的娱乐圈子里，令人眼花缭乱的美的形式层出不穷，种种以花瓶自居的美少女美男子更是如过江之鲫。可以说美常有，花瓶亦常有，但是以内在实力让人发现美的内在的，却不常见。</p><p><img src="https://joeybling.github.io/images/2743275-8a989c5bb640f4bf.jpg" alt="img"></p><p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p><p>黄渤算是特例，他从来不以帅著称。</p><p>但是他有让人透过“看似抽象的外表”发现其演技魅力的能耐，继而在大大小小的场合，能让人心悦诚服地体会到他妙语连珠舌灿生花的高情商魅力。这大概就属于那种可以满足人们精神需要层次的美了。</p><p><img src="https://joeybling.github.io/images/2743275-4d63302781989ff0.jpg" alt="img"></p><p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p><p>周冬雨也算特例，而且特例得很成功。</p><p>作为18岁时就荣升为“谋女郎”的幸运儿，她的演技她的颜值，在进入电影学院以及刚毕业的阶段，都不算是人们口中的佼佼者。甚至在很长一段时间里，人们总能从她刻意扮老的衣着里发现“令人扼腕”的衣品。</p><p>她没有好身材，她也曾自嘲“自己二十四岁的年纪里，有的是十四岁的身材”；她没有欧式大眼睛，她笑起来眼睛眯成一条线的样子的确像自嘲的“小蝌蚪”“小黄鸭”。</p><p><img src="https://joeybling.github.io/images/2743275-d0b5d1c133826c9e.jpg" alt="img"></p><p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p><p>可是她知道衣品可以偷偷修炼，演技亦可以让那些吐槽她的人对她黑转粉。</p><p>现在的周冬雨，总能用梨花带雨的哭或明媚如初恋的笑牵引着观众去发现她的灵动、可爱、放肆、潇洒。她是安生、顾胜男、肖红，还是宇宙CP心中念念不忘的“小蝌蚪”。她用角色在无数人心中收获对她别样之美的肯定。</p><p>诚然，她瘦小单薄，不够丰盈饱满。但是她会努力想尽各种办法，去让自己中学时因练舞而壮硕的小腿变瘦再变瘦。于是与别人比，她会胜在肌肤胜雪、会胜在后天小白腿又瘦又直所营造出的纯真干净气质上。所以，懂得适合自己穿衣风格的姑娘，懂得扬长避短的她，终会在可以抱着奖杯时靠衣品靠气质在时尚界锦上添花。</p><p><img src="https://joeybling.github.io/images/2743275-cb84c86409b3303d.jpg" alt="img"></p><p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p><p>周冬雨也许可以成为赵丽颖在衣品上征服人心的榜样。她们虽然不够天资卓越，但胜在后天足够努力。尽管她们都曾被人很批过说话耿直情商感人，但是胜在她们都足够心大如海，能把注意力转移到自己钟爱的演技磨砺层面，继而以实力赢得业界尊重。</p><p>这时代，从耀眼高台跌倒下来的明星不胜枚举，在底层逆境中一点一点攀爬努力的演员亦多如星辰。但不管她们处在什么阶段，能够给予她们自信的，永远是自己对所爱事业的追梦执念，和一次次挫败后的执着坚持。</p><p>正所谓“闻道有先后，术业有专攻”。多少演员成为明星，立足的资本，成名的资本，踏入时尚圈的资本，永远是彰显实力的代表作。也就是说，唯有专注于自己的术业，才能脱胎换骨，再上台阶；才能有机会发光发亮，才够得住机会来时的橄榄枝！</p><p>出道十年，赵丽颖从选秀开始奋斗，跑过无数龙套，在扎扎实实的演技磨砺中成就了陆贞、杉杉、花千骨、楚乔等多个被人记到心里的角色，也算是用步步的成就证明了从平凡到华丽蜕变的自我价值。</p><p><img src="https://joeybling.github.io/images/2743275-b650a625da475f1b.jpg" alt="img"></p><p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p><p>就算曾经土气又如何，曾经籍籍无名又如何，谁的人生不是在不断修炼中成长?当你拥有一颗坚忍倔强的心，埋首修剪自我的不足时，就没空在乎别人说长道短了。</p><p>就像赵丽颖曾说的，人到一定程度，就不会再计较那么多了；以前会怕这个、怕那个，但是她觉得现在的自己心态很平和，状态也还挺好；对于这些东西就更不在意了。</p><p>正所谓，你若淡看风云，窗前自有云卷云舒的自在；你若似繁花锦绣，周围自有蝴蝶悄然翩跹。</p><p><img src="https://joeybling.github.io/images/2743275-a9e30f2c8ddd5f04.jpg" alt="img"></p><p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p><p>诚然，梦想不必过早就实现，也不必实现了就止步于当下。</p><p>我们总有困顿迷惑自我怀疑的时候，就像努力了很多年的前夫哥雷佳音，在出演鹿兆鹏几个月都快要抑郁的时候，等来了陈俊生、裴纶这样一个可以证明自己实力的角色。</p><p><img src="https://joeybling.github.io/images/2743275-8d20f5c9550d4809.jpg" alt="img"></p><p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p><p>就像被离婚大战拖累到几乎要完全没有出路的潘粤明，在跨界歌王中唱出了文艺小生的双面挣扎，也让自己有机会被制作方看中可塑性而出演了证明自己炸裂演技的角色“白夜兄弟”。</p><p><img src="https://joeybling.github.io/images/2743275-ecab8a59519a96cf.jpg" alt="img"></p><p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p><p>我们总有会爬上某个看似自我高峰的时刻，唯有清醒和自省能让自己行远路行得远。</p><p>就像周冬雨的小妞人设演多了，也需要调整战略在别的角色领域里证明自己的可塑性。就像赵丽颖的进阶更上层楼了，也需要在学识修养衣品方面内外兼修裨补缺漏。</p><p>有人说，任何人都不是超人，你的心思放在哪儿是可以看见的。</p><p>当你眼中只有名利时，纵然有一千万中想红想赚快钱的途径，但是如日中天如薛之谦又如何，火箭般翻红的速度，维持的时间却不过是两年。</p><p>当没有创新度的段子梗被他在上百个节目中玩到泛滥时，当没有专情如一的人品来维持深情人设而被昔日恋人李雨桐扒个底朝天的时候，名利来得快走得也快，还顺便把你打倒至众人踩众人唾弃的深渊。</p><p>傅雷说，我们的确是盲目着在世界上前进的。但是当你行走于世越深入，你才发现你的双眼你的灵魂会容易被浮华蔽眼而陷入盲目。</p><p>没有谁不渴望事业成功荣耀加身，但是能救赎我们灵魂的永远是自己可以拿得出手的自己钟爱的作品。</p><p>如好剧本之于演员，好书籍之于作家，好项目之于商人，好工作之于普通人。我们行走江湖的目的，就是用尽自己的全部能耐把本来就好的璞玉打造成臻于完美的玉石。</p><p>至于随之而来的物质累积、名誉傍身，都不过是立足于其上的附加之物。本立则荣加，本无则荣枯。明白这一点，世人眼中关于你的值不值得，都不足以撼动你对自己的肯定。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;网络上为赵丽颖晋身为Dior新代言人，为baby抱屈而打口水仗的人们依旧在评论区喋喋不休。&lt;/p&gt;
&lt;p&gt;网友不是头一次抹黑赵丽颖，也不是第一次对她评头论足。&lt;/p&gt;
&lt;p&gt;他们从来没忘记赵丽颖的中专文凭、农村出身、补刀神手的人设，以及她在时尚界那次长裙美背后却贴小花纸的“土美”事件。&lt;/p&gt;
&lt;p&gt;他们从来没想到她以一张包子脸的长相也能进军时尚界甚至可以开疆辟土，能在颜控大长腿的天下里挤得一席之地。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>WEB API</title>
    <link href="http://example.com/2022/04/21/WEB-API-DAY4/"/>
    <id>http://example.com/2022/04/21/WEB-API-DAY4/</id>
    <published>2022-04-21T10:26:08.596Z</published>
    <updated>2022-05-05T14:38:56.885Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WEB-API"><a href="#WEB-API" class="headerlink" title="WEB API"></a>WEB API</h1><p>常用得到的键盘事件</p><h3 id="1-1-onkeyup-键盘抬起时触发"><a href="#1-1-onkeyup-键盘抬起时触发" class="headerlink" title="1.1 onkeyup 键盘抬起时触发"></a>1.1 onkeyup 键盘抬起时触发</h3><h3 id="1-2代码实现"><a href="#1-2代码实现" class="headerlink" title="1.2代码实现"></a>1.2代码实现</h3><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">document.addEventListener(<span class="string">&#x27;keyup&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">            <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;键盘弹起&#x27;</span>);</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="2-1onkeydown-键盘按下触发"><a href="#2-1onkeydown-键盘按下触发" class="headerlink" title="2.1onkeydown 键盘按下触发"></a>2.1onkeydown 键盘按下触发</h3><p>那个值还没有输入，事件就被触发了</p><h3 id="2-2代码的实现"><a href="#2-2代码的实现" class="headerlink" title="2.2代码的实现"></a>2.2代码的实现</h3><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">document.addEventListener(<span class="string">&#x27;keydown&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">            <span class="built_in">console</span>.<span class="built_in">log</span>(e);</span><br><span class="line">            <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;键盘按下&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-1onkeypress-键盘按下触发"><a href="#3-1onkeypress-键盘按下触发" class="headerlink" title="3.1onkeypress 键盘按下触发"></a>3.1onkeypress 键盘按下触发</h3><p>keypress不能被功能键识别</p><h3 id="3-2代码实现"><a href="#3-2代码实现" class="headerlink" title="3.2代码实现"></a>3.2代码实现</h3><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">document.addEventListener(<span class="string">&#x27;keypress&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">            <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;我被按下了press&#x27;</span>);</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><h3 id="4-三个键盘事件的执行顺序"><a href="#4-三个键盘事件的执行顺序" class="headerlink" title="4.三个键盘事件的执行顺序"></a>4.三个键盘事件的执行顺序</h3><p>keydown –&gt; keypress  —-&gt; keyup</p><p>keydown ，keypress在我们输入键的时候就已经触发事件了</p><h2 id="键盘事件对象之keyCode属性"><a href="#键盘事件对象之keyCode属性" class="headerlink" title="键盘事件对象之keyCode属性"></a>键盘事件对象之keyCode属性</h2><p>键盘事件中对象的keyCode 属性可以得到相应键的ACSSII码值</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">document.addEventListener(<span class="string">&#x27;keyup&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;up:&#x27;</span> + e.keyCode);</span><br><span class="line">            <span class="keyword">if</span> (e.keyCode === <span class="number">65</span>) &#123;</span><br><span class="line">                alert(<span class="string">&#x27;您按下a键&#x27;</span>)</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                alert(<span class="string">&#x27;您没按下a键&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        document.addEventListener(<span class="string">&#x27;press&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">            <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;press:&#x27;</span> + e.keyCode);</span><br><span class="line">            </span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><h2 id="模拟京东按键输入内容"><a href="#模拟京东按键输入内容" class="headerlink" title="模拟京东按键输入内容"></a>模拟京东按键输入内容</h2><p>核心 思路：检测用户是否按下了 s键 ，如果按下了s键就把光标定位到搜索框里面</p><p>代码实现</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> search = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>)</span><br><span class="line">       <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;keyup&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">           <span class="comment">//打印出s的ACSII码值 </span></span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">keyCode</span>);  <span class="comment">//s= 83</span></span><br><span class="line">           <span class="keyword">if</span>(e.<span class="property">keyCode</span> == <span class="number">83</span>) &#123;</span><br><span class="line">               search.<span class="title function_">focus</span>()</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;)</span><br></pre></td></tr></table></figure><p>模拟京东快递单号查询 的案例</p><p>核心思路：</p><ol><li><p>快递单号输入内容时, 上面的大号字体盒子(con)显示(这里面的字号更大)</p></li><li><p>表单检测用户输入: 给表单添加键盘事件</p></li><li><p>同时把快递单号里面的值(value)获取过来赋值给 con盒子(innerText)做为内容</p></li><li><p>如果快递单号里面内容为空,则隐藏大号字体盒子(con)盒子</p></li></ol><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取元素</span></span><br><span class="line">        <span class="selector-tag">var</span> con = document<span class="selector-class">.querySelector</span>(<span class="string">&#x27;.con&#x27;</span>)</span><br><span class="line">        <span class="selector-tag">var</span> inputs = document<span class="selector-class">.querySelector</span>(<span class="string">&#x27;.jd&#x27;</span>)</span><br><span class="line">        <span class="comment">//当jd按下时绑定事件</span></span><br><span class="line">        inputs<span class="selector-class">.addEventListener</span>(<span class="string">&#x27;keyup&#x27;</span>,<span class="built_in">function</span>()&#123;</span><br><span class="line">            <span class="comment">//当表单框里面没有内容的时候,con盒子也没有内容 当有内容的时候,</span></span><br><span class="line">            <span class="comment">//内容也会给到con盒子</span></span><br><span class="line">            <span class="built_in">if</span>(this<span class="selector-class">.value</span> == <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">                con<span class="selector-class">.style</span><span class="selector-class">.display</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                con<span class="selector-class">.style</span><span class="selector-class">.display</span> = <span class="string">&#x27;block&#x27;</span></span><br><span class="line">                con<span class="selector-class">.innerHTML</span> = this<span class="selector-class">.value</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="comment">//jd获得焦点的时候con这个盒子显示</span></span><br><span class="line">        inputs<span class="selector-class">.addEventListener</span>(<span class="string">&#x27;focus&#x27;</span>,<span class="built_in">function</span>()&#123;</span><br><span class="line">            con<span class="selector-class">.style</span><span class="selector-class">.display</span> = <span class="string">&#x27;block&#x27;</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="comment">//jd失去焦点的时候con这个盒子隐藏</span></span><br><span class="line">        inputs<span class="selector-class">.addEventListener</span>(<span class="string">&#x27;blur&#x27;</span>,<span class="built_in">function</span>()&#123;</span><br><span class="line">            con<span class="selector-class">.style</span><span class="selector-class">.display</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><h2 id="BOM顶级对象window"><a href="#BOM顶级对象window" class="headerlink" title="BOM顶级对象window"></a>BOM顶级对象window</h2><p>BOM浏览器对象模型  </p><p>  BOM提供了独立于内容 而与浏览器窗口进行交互的对象；</p><h2 id="window常见的事件"><a href="#window常见的事件" class="headerlink" title="window常见的事件"></a>window常见的事件</h2><h3 id="页面加载事件"><a href="#页面加载事件" class="headerlink" title="页面加载事件"></a>页面加载事件</h3><h4 id="为什么有页面加载事件"><a href="#为什么有页面加载事件" class="headerlink" title="为什么有页面加载事件"></a>为什么有页面加载事件</h4><p>因为 JavaScript 中的函数方法需要在 HTML 文档渲染完成后才可以使用</p><p>如果没有渲染完成,此时的 DOM 树是不完整的,这样在调用一些 JavaScript 代码时就可能报出”undefined”错误</p><h3 id="页面加载事件的方式"><a href="#页面加载事件的方式" class="headerlink" title="页面加载事件的方式"></a>页面加载事件的方式</h3><p>传统的方式window.onload = function(){}</p><p>window.addEventListener (‘load’,function(){})</p><p>window.addEventListener(‘DOMContentLoaded’,function(){})</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">window.onload = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">               <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;1111&#x27;</span>)</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="comment">//第2种 load 表示页面全部加载完毕包含图片,css</span></span><br><span class="line">           window.addEventListener(<span class="string">&#x27;load&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">               <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;222&#x27;</span>);</span><br><span class="line">           &#125;)</span><br><span class="line">           <span class="comment">//第三种   DOMContentLoaded 文档加载完了,DOM树叶加载完了</span></span><br><span class="line">           <span class="comment">//不包含css 图片</span></span><br><span class="line">           document.addEventListener(<span class="string">&#x27;DONContentLoaded&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">               <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;3333&#x27;</span>);</span><br><span class="line">           &#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="调整窗口大小事件"><a href="#调整窗口大小事件" class="headerlink" title="调整窗口大小事件"></a>调整窗口大小事件</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">           <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span><br><span class="line">           <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">               <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;发生了变化&#x27;</span>);</span><br><span class="line">               <span class="comment">//window.innerWidth  获得当前浏览器宽度</span></span><br><span class="line">               <span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span> &lt;= <span class="number">600</span>) &#123;</span><br><span class="line">                   div.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">               &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                   div.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;)</span><br><span class="line">       &#125;)</span><br></pre></td></tr></table></figure><p>resize 事件是在浏<strong>览器窗口被重置时触发的，</strong>如当用户调整窗口大小，或者最大化、最小化、恢复窗口大小显示时触发 resize 事件</p><h2 id="定时器之setTimeout"><a href="#定时器之setTimeout" class="headerlink" title="定时器之setTimeout"></a>定时器之setTimeout</h2><p>1.setTimeout </p><p>​    语法规范:  window.setTimeout(调用函数, 延时时间);</p><ol><li><p>这个window在调用的时候可以省略</p></li><li><p>这个延时时间单位是毫秒 但是可以省略,如果省略默认的是0</p></li><li><p>这个调用函数可以直接写函数 还可以写 函数名 还有一个写法 ‘函数名()’</p></li><li><p>页面中可能有很多的定时器,我们经常给定时器加标识符 (名字)</p></li></ol><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//setTimeout(调用函数,延时时间)</span></span><br><span class="line">       <span class="comment">//第一种写法</span></span><br><span class="line">       setTimeout(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">           <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;时间到给我爆&#x27;</span>);</span><br><span class="line">       &#125;,<span class="number">2000</span>)</span><br><span class="line">       <span class="comment">//第二种写法</span></span><br><span class="line">       <span class="keyword">var</span> fn = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">           <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;我是回调函数&#x27;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">var</span> cb = setTimeout(fn,<span class="number">5000</span>)</span><br><span class="line">       <span class="comment">//这个延时时间是毫秒数,但是可以省略,如果省略默认的是0 </span></span><br><span class="line">       <span class="comment">//浏览器中最小延迟是4ms</span></span><br></pre></td></tr></table></figure><h2 id="清除-clearTimeout定时器"><a href="#清除-clearTimeout定时器" class="headerlink" title="清除 clearTimeout定时器"></a>清除 clearTimeout定时器</h2><p>clearTimeout(定时器名)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>)</span><br><span class="line">      <span class="comment">//开启定时器</span></span><br><span class="line">      <span class="keyword">var</span> timer = <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;时间到给我爆&#x27;</span>);</span><br><span class="line">      &#125;,<span class="number">2000</span>)</span><br><span class="line">      <span class="comment">//点击的时候清除定时器,在这个延迟事件前我们清除他 他就不会回调了</span></span><br><span class="line">      btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">          <span class="built_in">clearTimeout</span>(timer)</span><br><span class="line">      &#125;)</span><br></pre></td></tr></table></figure><h2 id="定时器之setInterval"><a href="#定时器之setInterval" class="headerlink" title="定时器之setInterval"></a>定时器之setInterval</h2><p> 语法规范:  window.setInterval(调用函数, 延时时间);</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.直接写在setInterval里面</span></span><br><span class="line">       setInterval(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">           <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;无敌是多么寂寞&#x27;</span>);</span><br><span class="line">       &#125;,<span class="number">2000</span>)</span><br><span class="line"></span><br><span class="line">       <span class="comment">//2.声明或者表达式 先初始化回调函数 在传入</span></span><br><span class="line">       <span class="keyword">var</span> fn = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">           <span class="built_in">console</span>.<span class="built_in">log</span>(<span class="string">&#x27;加油老铁&#x27;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       setInterval(fn,<span class="number">1000</span>)</span><br><span class="line">       <span class="comment">//清除定时器</span></span><br><span class="line">       <span class="comment">//clearInterval(IntervalID)</span></span><br></pre></td></tr></table></figure><h3 id="setTimout与setInterval的区别"><a href="#setTimout与setInterval的区别" class="headerlink" title="setTimout与setInterval的区别"></a>setTimout与setInterval的区别</h3><p>setTimeout 延时时间到了 就执行回调函数，只执行一次</p><p>setInterval 每隔这个延时时间就调用函数，重复执行</p><h2 id="清除setIterval-定时器"><a href="#清除setIterval-定时器" class="headerlink" title="清除setIterval 定时器"></a>清除setIterval 定时器</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> begin = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.begin&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> stop = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.stop&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> timer = <span class="literal">null</span></span><br><span class="line"><span class="comment">//注册点击事件</span></span><br><span class="line">begin.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">     timer = <span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我来了&#x27;</span>);</span><br><span class="line">    &#125;,<span class="number">2000</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">stop.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="built_in">clearInterval</span>(timer)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="倒计时效果"><a href="#倒计时效果" class="headerlink" title="倒计时效果"></a>倒计时效果</h2><hr><h2 id="发送短信案例"><a href="#发送短信案例" class="headerlink" title="发送短信案例"></a>发送短信案例</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">var</span> btn = document<span class="selector-class">.querySelector</span>(<span class="string">&#x27;button&#x27;</span>)</span><br><span class="line">      <span class="selector-tag">var</span> <span class="selector-tag">time</span> = <span class="number">3</span> <span class="comment">//定义剩下的秒数</span></span><br><span class="line">      btn<span class="selector-class">.addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="built_in">function</span>()&#123;</span><br><span class="line">          <span class="comment">//当按钮绑定点击事件后,开启定时器</span></span><br><span class="line">         timer = <span class="built_in">setInterval</span>(<span class="built_in">function</span>()&#123;</span><br><span class="line">             btn<span class="selector-class">.disable</span> = true</span><br><span class="line">              <span class="built_in">if</span>(<span class="selector-tag">time</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                  <span class="comment">//时间为0 的话恢复按钮,清除定时器</span></span><br><span class="line">                  <span class="built_in">clearInterval</span>(timer)</span><br><span class="line">                  btn<span class="selector-class">.disable</span> = false</span><br><span class="line">                  btn<span class="selector-class">.innerHTML</span> = <span class="string">&#x27;发送&#x27;</span></span><br><span class="line">                  <span class="selector-tag">time</span> = <span class="number">3</span></span><br><span class="line">              &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                  btn<span class="selector-class">.innerHTML</span> = <span class="string">&#x27;还剩下&#x27;</span>+time+<span class="string">&#x27;秒&#x27;</span></span><br><span class="line">                  time--</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;,<span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line">      &#125;)</span><br></pre></td></tr></table></figure><h2 id="this的指向问题（重点面试题）"><a href="#this的指向问题（重点面试题）" class="headerlink" title="this的指向问题（重点面试题）"></a><strong>this的指向问题</strong>（重点面试题）</h2><p>1.this在全局作用域和普通函数中的this指向是window（还有定时器中d的this）</p><p>2.方法中this，是调用就是谁</p><p>3.构造函数中this指向new的实例对象</p><p>//new构造寒素</p><p>1，在内存中创建一个空对象</p><p>2.让this指向这个空对象</p><p>3，执行构造函数里面的代码给这个空对象添加属性和方法</p><p>4，返回这个对象（构造函数里面 不需要写return）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="variable language_">window</span>.<span class="title function_">fn</span>();</span><br><span class="line">      <span class="variable language_">window</span>.<span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line"></span><br><span class="line">      &#125;, <span class="number">1000</span>);</span><br><span class="line">      <span class="comment">// 2. 方法调用中谁调用this指向谁</span></span><br><span class="line">      <span class="keyword">var</span> o = &#123;</span><br><span class="line">          <span class="attr">sayHi</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">              <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>); <span class="comment">// this指向的是 o 这个对象</span></span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      o.<span class="title function_">sayHi</span>();</span><br><span class="line">      <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">      <span class="comment">// btn.onclick = function() &#123;</span></span><br><span class="line">      <span class="comment">//     console.log(this); // this指向的是btn这个按钮对象</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line">      btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">              <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>); <span class="comment">// this指向的是btn这个按钮对象</span></span><br><span class="line"></span><br><span class="line">          &#125;)</span><br><span class="line">          <span class="comment">// 3. 构造函数中this指向构造函数的实例</span></span><br><span class="line">      <span class="keyword">function</span> <span class="title function_">Fun</span>(<span class="params"></span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>); <span class="comment">// this 指向的是fun 实例对象</span></span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">var</span> fun = <span class="keyword">new</span> <span class="title class_">Fun</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="执行队列"><a href="#执行队列" class="headerlink" title="执行队列"></a>执行队列</h2><h3 id="1-同步任务和异步任务"><a href="#1-同步任务和异步任务" class="headerlink" title="1. 同步任务和异步任务"></a>1. 同步任务和异步任务</h3><p>​    单线程导致的问题就是后面的任务等待前面任务完成，如果前面任务很耗时（比如读取网络数据），后面任务不得不一直等待！！</p><p>​    为了解决这个问题，利用多核 CPU 的计算能力，HTML5 提出 Web Worker 标准，允许 JavaScript 脚本创建多个线程，但是子线程完全受主线程控制。于是，JS 中出现了<strong>同步任务</strong>和<strong>异步任务</strong>。</p><h4 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h4><p>​    前一个任务结束后再执行后一个任务，程序的执行顺序与任务的排列顺序是一致的、同步的。比如做饭的同步做法：我们要烧水煮饭，等水开了（10分钟之后），再去切菜，炒菜。</p><h4 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h4><p>​    你在做一件事情时，因为这件事情会花费很长时间，在做这件事的同时，你还可以去处理其他事情。比如做饭的异步做法，我们在烧水的同时，利用这10分钟，去切菜，炒菜。</p><h2 id="location常见的方法"><a href="#location常见的方法" class="headerlink" title="location常见的方法"></a>location常见的方法</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">var btn = document.querySelector(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line"></span><br><span class="line">   btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>() &#123;</span><br><span class="line"></span><br><span class="line">     <span class="regexp">//</span> 记录浏览历史,所以可以实现后退功能</span><br><span class="line"></span><br><span class="line">     <span class="regexp">//</span> location.assign(<span class="string">&#x27;http://www.itcast.cn&#x27;</span>);</span><br><span class="line"></span><br><span class="line">     <span class="regexp">//</span> 不记录浏览历史,所以不可以实现后退功能</span><br><span class="line"></span><br><span class="line">     <span class="regexp">//</span> location.replace(<span class="string">&#x27;http://www.itcast.cn&#x27;</span>);</span><br><span class="line"></span><br><span class="line">     location.reload(true);</span><br><span class="line"></span><br><span class="line">   &#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;WEB-API&quot;&gt;&lt;a href=&quot;#WEB-API&quot; class=&quot;headerlink&quot; title=&quot;WEB API&quot;&gt;&lt;/a&gt;WEB API&lt;/h1&gt;&lt;p&gt;常用得到的键盘事件&lt;/p&gt;
&lt;h3 id=&quot;1-1-onkeyup-键盘抬起时触发&quot;&gt;&lt;a href=&quot;#1-1-onkeyup-键盘抬起时触发&quot; class=&quot;headerlink&quot; title=&quot;1.1 onkeyup 键盘抬起时触发&quot;&gt;&lt;/a&gt;1.1 onkeyup 键盘抬起时触发&lt;/h3&gt;&lt;h3 id=&quot;1-2代码实现&quot;&gt;&lt;a href=&quot;#1-2代码实现&quot; class=&quot;headerlink&quot; title=&quot;1.2代码实现&quot;&gt;&lt;/a&gt;1.2代码实现&lt;/h3&gt;&lt;figure class=&quot;highlight arcade&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;document.addEventListener(&lt;span class=&quot;string&quot;&gt;&amp;#x27;keyup&amp;#x27;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;键盘弹起&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>hexo</title>
    <link href="http://example.com/2022/04/15/hello-world/"/>
    <id>http://example.com/2022/04/15/hello-world/</id>
    <published>2022-04-15T03:41:12.897Z</published>
    <updated>2022-05-05T13:18:41.508Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
